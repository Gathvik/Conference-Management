# Generated by Django 5.0.6 on 2024-06-25 07:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('k_id', models.CharField(max_length=255)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254, unique=True)),
                ('mobileno', models.CharField(max_length=255, unique=True)),
                ('is_active', models.IntegerField(default=1)),
                ('unique_id', models.CharField(max_length=255)),
                ('date_joined', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('shortform', models.CharField(max_length=255, unique=True)),
                ('orga_email', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reg_link', models.CharField(max_length=255)),
                ('event_color', models.CharField(blank=True, max_length=7, null=True)),
                ('logo', models.CharField(max_length=255)),
                ('header_image', models.CharField(blank=True, max_length=255, null=True)),
                ('landing_text', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=0)),
                ('track_id', models.CharField(max_length=255)),
                ('created_on', models.DateTimeField()),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('criteria', models.CharField(blank=True, db_column='criteria', max_length=500, null=True)),
                ('total_max_marks', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'EVENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logfield', models.CharField(max_length=255)),
                ('logtype', models.CharField(max_length=255)),
                ('prelogdetails', models.JSONField()),
                ('postlogdetails', models.JSONField()),
                ('log_user_id', models.CharField(max_length=255)),
                ('logip', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(auto_now=True, max_length=6)),
            ],
            options={
                'db_table': 'EVENT_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('abstract', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('paperupload', models.CharField(max_length=255)),
                ('submission_id', models.CharField(max_length=20)),
                ('created_on', models.DateTimeField()),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
                ('criteria', models.CharField(blank=True, db_column='criteria', max_length=500, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('feedback', models.CharField(max_length=500)),
                ('total_marks', models.IntegerField()),
            ],
            options={
                'db_table': 'CORE_SUBMISSION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'EVENT_TRACK_TOPIC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_id', models.CharField(max_length=20)),
                ('track_name', models.CharField(max_length=255)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'EVENT_TRACK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.ForeignKey(db_column='event_id', on_delete=django.db.models.deletion.DO_NOTHING, to='core.event')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, to='core.authuser')),
            ],
            options={
                'db_table': 'REVIEWER',
                'managed': 'False',
            },
        ),
    ]
